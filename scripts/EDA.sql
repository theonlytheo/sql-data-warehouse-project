-- =====================================
-- DATABASE EXPLORATION
-- =====================================

-- Explore All Objects in the Database
SELECT * FROM INFORMATION_SCHEMA.TABLES

-- Explore All Column in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS

-- Explore dim_customers column in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

-- =====================================
-- DIMENSION EXPLORATION
-- =====================================
-- Explore All Countries our Customers come from
SELECT DISTINCT country FROM gold.dim_customers

-- Explore All Categories "The Major Divisions"
SELECT DISTINCT category FROM gold.dim_products

-- Explore All Categories, subcategories, product_name "The Major Divisions"
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1, 2, 3

-- =====================================
-- DATE EXPLORATION
-- =====================================
-- Find the date of the first and last order
-- How many years of sales are available
SELECT
MIN(order_date) first_order_date,
MAX(order_date) last_order_date,
DATEDIFF(MONTH, MIN(order_date), MAX(order_date)) AS order_range_months
FROM gold.fact_sales

-- Find the youngest and the oldest customer
SELECT
MIN(birthdate) oldest_birthdate,
DATEDIFF(year, MIN(birthdate), GETDATE()) AS oldest_age,
MAX(birthdate) youngest_birthdate,
DATEDIFF(year, MAX(birthdate), GETDATE()) AS youngest_age
FROM gold.dim_customers

-- =====================================
-- MEASURE EXPLORATION
-- =====================================
-- Find the total sales
-- Find how many items are sold
-- Find the average selling price
-- Find the total number of orders
-- Find the total number of products
-- Find the total number of customers
-- Find the total number of customers that has placed an order
SELECT
	'Total Sales' measure_name,
	SUM(sales_amount) measure_value
FROM gold.fact_sales
UNION ALL
SELECT
	'Total Quantity' measure_name,
	SUM(quantity) measure_value
FROM gold.fact_sales 
UNION ALL
SELECT
	'Average Price' measure_name,
	AVG(price) measure_value
FROM gold.fact_sales
UNION ALL
SELECT 
	'Total Nr. Orders' measure_name,
	COUNT(DISTINCT order_number) measure_value
FROM gold.fact_sales
UNION ALL
SELECT
	'Total Nr. Products' measure_name,
	COUNT(product_number) measure_value
FROM gold.dim_products
UNION ALL
SELECT
	'Total Nr. Customers' measure_name,
	COUNT(customer_id) measure_value
FROM gold.dim_customers

-- =====================================
-- MAGNITUDE
-- =====================================
-- Find total customers by countries
SELECT
country,
COUNT(customer_key) total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT
gender,
COUNT(customer_key) total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC

-- Find total products by category
SELECT
category,
COUNT(product_key) total_product
FROM gold.dim_products
GROUP BY category
ORDER BY total_product DESC

-- What is the average costs in each category?
SELECT
category,
AVG(cost) avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC

-- What is the total revenue generated for each category?
SELECT
gdp.category,
SUM(gfs.sales_amount) total_revenue
FROM gold.fact_sales gfs
LEFT JOIN gold.dim_products gdp
ON gdp.product_key = gfs.product_key
GROUP BY gdp.category
ORDER BY total_revenue DESC

-- Find total revenue is generated by each customer
SELECT
gdc.customer_key,
gdc.first_name,
gdc.last_name,
SUM(gfs.sales_amount) total_revenue
FROM gold.fact_sales gfs
LEFT JOIN gold.dim_customers gdc
ON gdc.customer_key = gfs.customer_key
GROUP BY
gdc.customer_key,
gdc.first_name,
gdc.last_name
ORDER BY total_revenue DESC

-- What is the distribution of sold item across countries?
SELECT
gdc.country,
SUM(gfs.quantity) total_quantity
FROM gold.fact_sales gfs
LEFT JOIN gold.dim_customers gdc
ON gdc.customer_key = gfs.customer_key
GROUP BY gdc.country
ORDER BY total_quantity DESC

-- =====================================
-- RANKING
-- =====================================
-- Which 5 products generate the highest revenue?
SELECT TOP 5
gdp.product_name,
SUM(gfs.sales_amount) total_revenue
FROM gold.fact_sales gfs
LEFT JOIN gold.dim_products gdp
ON gdp.product_key = gfs.product_key
GROUP BY gdp.product_name
ORDER BY total_revenue DESC

-- Which 5 products generate the highest revenue? (with window function)
SELECT *
FROM(
	SELECT
	gdp.product_name,
	SUM(gfs.sales_amount) total_revenue,
	ROW_NUMBER() OVER (ORDER BY SUM(gfs.sales_amount) DESC) AS rank_products
	FROM gold.fact_sales gfs
	LEFT JOIN gold.dim_products gdp
	ON gdp.product_key = gfs.product_key
	GROUP BY gdp.product_name
)t WHERE rank_products <= 5

-- What are the 5 worst-performing products in terms of sales?
SELECT TOP 5
gdp.product_name,
SUM(gfs.sales_amount) total_revenue
FROM gold.fact_sales gfs
LEFT JOIN gold.dim_products gdp
ON gdp.product_key = gfs.product_key
GROUP BY gdp.product_name
ORDER BY total_revenue ASC

-- Find the top 10 customers who have generated the highest revenue
SELECT TOP 10
gdc.customer_key,
gdc.first_name,
gdc.last_name,
SUM(gfs.sales_amount) total_revenue
FROM gold.fact_sales gfs
LEFT JOIN gold.dim_customers gdc
ON gdc.customer_key = gfs.customer_key
GROUP BY
gdc.customer_key,
gdc.first_name,
gdc.last_name
ORDER BY total_revenue DESC

-- Top 3 customers with the fewest orders placed
SELECT TOP 3
gdc.customer_key,
gdc.first_name,
gdc.last_name,
COUNT(DISTINCT order_number) total_orders
FROM gold.fact_sales gfs
LEFT JOIN gold.dim_customers gdc
ON gdc.customer_key = gfs.customer_key
GROUP BY
gdc.customer_key,
gdc.first_name,
gdc.last_name
ORDER BY total_orders ASC
